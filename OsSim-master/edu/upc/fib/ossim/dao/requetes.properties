list.qr.by.exercice= select Id_QR, mod_QR, blockOnStep, question, includeAnswers, difficulty, answerType from QR	where QR.id_Exo=?
list.answers.by.qr= select reponse, isAnwerCorrect from QR_answers where QR_answers.id_QR=?
get.info.qr.memoire.by.qr= select  memorySize, soSize, pageSize, policy, management from QR_memoire Where QR_memoire.id_QR=?
get.param.qr.processus.by.qr= select multiprogramming, preemptive, quantum, var, verrou, management from QR_processus Where id_QR=?
list.processus.ready.by.qr= select Pid, Pname, submission, Periodic, Bursts, Color, Variables, Resources, Queue_id from QR_Processus where QR_Processus.id_QR=? and Queue_id='R'
list.processus.arriving.by.qr= select Pid, Pname, submission, Periodic, Bursts, Color, Variables, Resources, Queue_id from QR_Processus where QR_Processus.id_QR=? and Queue_id='A'
list.processus.memoire.by.qr= select Pid, Pname, size, memSize, duration, color, quantumOrders, quantum from QR_Process_Mem where QR_Process_Mem.id_QR=? 
list.bid.by.pid= select bid, size, load from Proc_Bid where Proc_Bid.pid=?
list.test.realise.by.etudiant=
list.etudiant.by.test=
get.etudiant.by.id=SELECT login, nomprenom_etudiant FROM Etudiant WHERE id = ?
init.mdp.etudiant= UPDATE ETUDIANT SET password= ? where id = ?
list.exo.publie= select Id_exercice, Titre_exo, Exo_type from Exercice where Exercice.actif=1 and Exercice.Exo_type='e'
list.tests.publie= select Id_exercice, Titre_exo, Exo_type from Exercice where Exercice.actif=1 and Exercice.Exo_type='t'    
    
